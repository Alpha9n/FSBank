/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id("xyz.jpenilla.run-paper") version "2.0.1"
}

group = "pro.freeserver.alphakun.plugin"
version = "0.0.1-dev"
description = "FSBank"

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = uri("https://oss.sonatype.org/content/groups/public/")
    }
    maven {
        name = "jitpack"
        url = uri("https://jitpack.io")
    }
    maven {
        name = "panda-repo"
        url = uri("https://repo.panda-lang.org/releases")
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "com.github.supabase-community:postgrest-kt:0.2.0"
    implementation "com.google.code.gson:gson:2.10"
    implementation "dev.rollczi.litecommands:bukkit-adventure:2.7.0"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: project.version]
    inputs.properties props
            filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.19.3")
    }
}